---
# =============================================================================
# Ansible Role: NFTables - Access Control Lists
# =============================================================================
# This file manages the configuration of NFTables access control lists (rules).
# It handles the deployment of various rule sets to control network traffic.
#
# Configuration includes:
# 1. Security protection rules
# 2. Cluster communication rules
# 3. User-defined rules
# 4. NAT rules
# 5. Base structure (tables and chains)
# 6. Service validation after rule changes
# =============================================================================

# -----------------------------------------------------------------------------
# 1. Security Protection Rules
# -----------------------------------------------------------------------------
- name: NFTables | acl | Deploy security protection rules file
  become: true
  ansible.builtin.template:
    src: templates/rules/firewall.rules.j2
    dest: "{{ nftables_rules_directory_path }}/10-firewall.rules"
    owner: root
    group: root
    mode: "0600"
    validate: nft -c -f %s
  register: _nftables_security_rules_
  when: >
    nftables_configure_security_rules | default(false)

- name: NFTables | acl | Remove security protection rules file (if exists)
  become: true
  ansible.builtin.file:
    path: "{{ nftables_rules_directory_path }}/10-firewall.rules"
    state: absent
  register: _nftables_security_rules_removed_
  when: >
    not nftables_configure_security_rules | default(false)

# -----------------------------------------------------------------------------
# 2. Cluster Communication Rules
# -----------------------------------------------------------------------------
- name: NFTables | acl | Deploy cluster communication rules file
  become: true
  ansible.builtin.template:
    src: templates/rules/cluster.rules.j2
    dest: "{{ nftables_rules_directory_path }}/20-cluster.rules"
    owner: root
    group: root
    mode: "0600"
    validate: nft -c -f %s
  register: _nftables_cluster_rules_
  when: >
    nftables_cluster_enabled | default(false)

- name: NFTables | acl | Remove cluster communication rules file (if exists)
  become: true
  ansible.builtin.file:
    path: "{{ nftables_rules_directory_path }}/20-cluster.rules"
    state: absent
  register: _nftables_cluster_rules_removed_
  when: >
    not nftables_cluster_enabled | default(false)

# -----------------------------------------------------------------------------
# 3. User-Defined Rules
# -----------------------------------------------------------------------------
- name: NFTables | acl | Deploy user-defined rules file
  become: true
  ansible.builtin.template:
    src: templates/rules/user_defined.rules.j2
    dest: "{{ nftables_rules_directory_path }}/30-user-defined.rules"
    owner: root
    group: root
    mode: "0600"
    validate: nft -c -f %s
  register: _nftables_user_defined_rules_
  when: >
    nftables_user_defined_input_enabled | default(false) or
    nftables_user_defined_forward_enabled | default(false) or
    nftables_user_defined_output_enabled | default(false)

- name: NFTables | acl | Remove user-defined rules file (if exists)
  become: true
  ansible.builtin.file:
    path: "{{ nftables_rules_directory_path }}/30-user-defined.rules"
    state: absent
  register: _nftables_user_defined_rules_removed_
  when: >
    not nftables_user_defined_input_enabled | default(false) and
    not nftables_user_defined_forward_enabled | default(false) and
    not nftables_user_defined_output_enabled | default(false)

# -----------------------------------------------------------------------------
# 4. NAT Rules
# -----------------------------------------------------------------------------
- name: NFTables | acl | Deploy NAT rules file
  become: true
  ansible.builtin.template:
    src: templates/rules/nat.rules.j2
    dest: "{{ nftables_rules_directory_path }}/40-nat.rules"
    owner: root
    group: root
    mode: "0600"
    validate: nft -c -f %s
  register: _nftables_nat_rules_
  when: >
    nftables_nat_prerouting_enabled | default(false) or
    nftables_nat_postrouting_enabled | default(false)

- name: NFTables | acl | Remove NAT rules file (if exists)
  become: true
  ansible.builtin.file:
    path: "{{ nftables_rules_directory_path }}/40-nat.rules"
    state: absent
  register: _nftables_nat_rules_removed_
  when: >
    not nftables_nat_prerouting_enabled | default(false) and
    not nftables_nat_postrouting_enabled | default(false)

# -----------------------------------------------------------------------------
# 5. Base Structure
# -----------------------------------------------------------------------------
- name: NFTables | acl | Deploy base structure file
  become: true
  ansible.builtin.template:
    src: templates/rules/base.rules.j2
    dest: "{{ nftables_rules_directory_path }}/00-base.rules"
    owner: root
    group: root
    mode: "0600"
    validate: nft -c -f %s
  register: _nftables_base_rules_

# -----------------------------------------------------------------------------
# 6. Service Verification
# -----------------------------------------------------------------------------
- block:
    - name: NFTables | acl | Force restart nftables service
      become: true
      ansible.builtin.shell: >
        sleep 5s && systemctl restart {{ nftables_service_name }}
      async: 10
      poll: 0

    - name: NFTables | acl | Pause for 10 seconds to load nftables service
      ansible.builtin.pause:
        seconds: 10

    - name: NFTables | acl | Verify nftables service status
      become: true
      ansible.builtin.command: >
        systemctl is-active {{ nftables_service_name }}
      failed_when: false
      changed_when: false
      register: _nftables_service_state_

    - name: NFTables | acl | Fail if nftables service is not running
      ansible.builtin.fail:
        msg: "nftables service is not running!"
      when: >
        _nftables_service_state_.stdout == "inactive" or
        _nftables_service_state_.stdout == "failed"
  when: >
    _nftables_base_rules_.changed | default(false) or
    _nftables_security_rules_.changed | default(false) or
    _nftables_security_rules_removed_.changed | default(false) or
    _nftables_cluster_rules_.changed | default(false) or
    _nftables_cluster_rules_removed_.changed | default(false) or
    _nftables_user_defined_rules_.changed | default(false) or
    _nftables_user_defined_rules_removed_.changed | default(false) or
    _nftables_nat_rules_.changed | default(false) or
    _nftables_nat_rules_removed_.changed | default(false)
